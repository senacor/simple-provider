name: ci

on: push

env:
  GROUP: senacor
  REPO: simple-provider

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build + verify
        run: mvn -B verify

  integration-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run Integration tests
        run: mvn integration-test

  docker:
    needs:
      - test
      - integration-test
    runs-on: ubuntu-latest
    env:
      PUSH_DOCKER_IMAGE: true
      DOCKER_REGISTRY: ghcr.io
    steps:
      - uses: actions/checkout@v2

      - name: Package
        run: mvn -B package -DskipTests -DskipITs

      - name: "Docker: Set up QEMU"
        uses: docker/setup-qemu-action@v1

      - name: "Docker: Set up Docker Buildx"
        uses: docker/setup-buildx-action@v1

      - name: "Docker: Login to Container Registry"
        uses: docker/login-action@v1
        if: env.PUSH_DOCKER_IMAGE == 'true'
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ${{ env.DOCKER_REGISTRY }}

      - name: "Docker: Build and push to Container Registry"
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.sha }}
          push: ${{ env.PUSH_DOCKER_IMAGE }}

  postman-test:
    needs:
      - docker
    name: postman test
    runs-on: ubuntu-latest
    services:
      test-service:
        image: ghcr.io/${{ github.repository }}:${{ github.sha }}
        ports:
          - 8080:8080
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - run: npm install newman -g
      - run: newman run postman/postman_collection.json
